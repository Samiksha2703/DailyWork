1. Write a program that takes a command-line argument n and prints a table of the powers of 2 that are less than or equal to 2^n. 
Solution : 
##!/bin/bash -x 
echo "Enter the number" 
read n 
a=2 
for (( i=0; i<=n; i++ )) 
do 
pow=$(( $a**$i )) 
echo "$a ^ $i = $pow" 
done 
Output : 
$ ./powerof2.sh 
Enter the number 
5 
2 ^ 0 = 1 
2 ^ 1 = 2 
2 ^ 2 = 4 
2 ^ 3 = 8 
2 ^ 4 = 16 
2 ^ 5 = 32 
2. Write a program that takes a command-line argument n and prints the nth harmonic number. Harmonic Number is of the form 
Hs = 1/1 + 1/2 + 1/3 +------------+ 1/n 
Solution : 
##!/bin/bash/ -x 
echo "Enter the number" 
read n 
Hs=0 
for (( i=1; i<=n; i++ )) 
do 
add=`echo "scale=2; 1/$i" | bc -l`
Hs=`echo "scale=2; $Hs+$add" | bc -l` 
done 
echo "The $nth harmonics number is $Hs" 
Output : 
$ ./Harmonics.sh 
Enter the number 
5 
The harmonics number is 2.28 
Output : 
$ ./Harmonics.sh 
Enter the number 
7 
The harmonics number is 2.58 
3. Write a program that takes an input and determines if the number is a prime. Solution : 
##!/bin/bash/ -x 
echo "Enter the number" 
read n 
flag=0 
if [ $n -eq 0 -o $n -eq 1 ] 
then flag=1 
fi 
if [ $n > 2 ] 
then 
for (( i=2; i<n; i++ )) 
do 
check=$(( $n % $i )) 
if [ $check -eq 0 ] 
then 
flag=1 
break 
fi 
done 
if [ $flag -eq 0 ] 
then 
echo "The number is prime number" 
else 
echo "The number is not prime number"
fi 
fi 
Output 1 : 
$ ./PrimeNo.sh 
Enter the number 
5 
The number is prime number 
Output 2 : 
$ ./PrimeNo.sh 
Enter the number 
0 
The number is not prime number 
Output 3 : 
$ ./PrimeNo.sh 
Enter the number 
4 
The number is not prime number 
Output 4 : 
$ ./PrimeNo.sh 
Enter the number 
88 
The number is not prime number 
4. Extend the program to take a range of number as input and output the Prime Numbers in that range. 
Solution : 
Output 1 : 
$ ./FactorsInRange.sh 
Enter the lower and upper limit 
12 
22 
Prime numbers between range
13 17 19 
Output 2 : 
$ ./FactorsInRange.sh 
Enter the lower and upper limit 
20 
5 
Entered the valid range 
Lower limit should be 0<=lowlim<upplim and upper limit should be upplim>lowlim Output 3 : 
$ ./FactorsInRange.sh 
Enter the lower and upper limit 
12 
12 
Entered the valid range 
Lower limit should be 0<=lowlim<upplim and upper limit should be upplim>lowlim 
Output : 
$ ./FactorsInRange.sh 
Enter the lower and upper limit 
-5 
10 
Entered the valid range 
Lower limit should be 0<=lowlim<upplim and upper limit should be upplim>lowlim 
5. Write a program that computes a factorial of a number taken as input. 5 Factorial â€“ 5! = 1 * 2 * 3 * 4 * 5 
Solution : 
##!/bin/bash -x 
echo "Enter the number" 
read n 
f=1 
for(( i=1; i<=n; i++ )) do 
f=$((f * i)) 
done 
echo "Factorial of $n is $f" 
Output 1 : 
$ ./Factorial.sh
Enter the number 
3 
Factorial of 3 is 6 
Output 2 : 
$ ./Factorial.sh 
Enter the number 
2 
Factorial of 2 is 2 
Output 3 : 
$ ./Factorial.sh 
Enter the number 
8 
Factorial of 8 is 40320 
6. Write a program to compute Factors of a number N by using a prime factorization method. 
Logic -> Traverse till i*i <= N instead of i <= N for efficiency. 
O/P -> Print the prime factors of number N. 
Solution : 
##!/bin/bash/ -x 
echo "Enter an integer : " 
read int 
if [ $int -le 1 ] 
then 
echo "Not allowed!" 
exit 
fi 
echo "Prime factors of $int :" 
count=0 
flag=0 
k=0 
array=() 
for (( i=2; i<int; i++ )) 
do 
if [ $(( $int % $i )) -eq 0 ] 
then 
factor=$i
for (( j=2; j<$factor; j++ )) 
do 
check=$(( $factor % $j )) 
if [ $check -eq 0 ] 
then 
flag=1 
break 
fi 
done 
if [ $flag -eq 0 ] 
then 
echo $factor 
count=1 
fi 
fi 
done 
if [ $count -eq 0 ] 
then 
echo "No prime factors found except 1 and $int" fi Output : 
Enter an integer : 
15 
Prime factors of 15 : 
3 
5 
Output : 
$ ./PrintPrimeFactor.sh 
Enter an integer : 
13 
Prime factors of 13 : 
No prime factors found except 1 and 13
